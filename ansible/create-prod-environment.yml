---
# Define the name and description of the OpenShift project
- set_fact: project="prod"
- set_fact: project_description="Production/Demo Environment for Microservices Scrum"
- set_fact: expose_basic_ui=true

- debug:
    msg: Creating the production environment ...

- include: environment-setup.yml
- include: jaeger-setup.yml
- include: create-db.yml

- name: Allows jenkins to access the production environment
  shell: "oc policy add-role-to-user edit system:serviceaccount:cicd:jenkins -n prod"
  register: command_result
  failed_when: "'exists' not in command_result.stderr and command_result.rc != 0"
  changed_when: "'exists' not in command_result.stderr"
  tags:
    - openshift
    - jenkins

- name: Create the service configuration for each production microservice
  shell: "oc create -n prod -f {{ workdir }}/{{ item.repo }}/openshift/prod-service-config.yaml"
  register: command_result
  failed_when: "'exists' not in command_result.stderr and command_result.rc != 0"
  changed_when: "'exists' not in command_result.stderr"
  with_items: "{{ microservices_scrum_projects }}"
  tags:
    - openshift

- name: Create the deployment configuration for each production microservice
  shell: "oc create -n prod -f {{ workdir }}/{{ item.repo }}/openshift/prod-deployment-config.json"
  register: command_result
  failed_when: "'exists' not in command_result.stderr and command_result.rc != 0"
  changed_when: "'exists' not in command_result.stderr"
  with_items: "{{ microservices_scrum_projects }}"
  tags:
    - openshift

- name: Cancel the deployments
  shell: "oc deploy {{ item.name }} --cancel -n prod "
  register: command_result
  failed_when: "'exists' not in command_result.stderr and command_result.rc != 0"
  changed_when: "'exists' not in command_result.stderr"
  with_items: "{{ microservices_scrum_projects }}"
  tags:
    - openshift

- debug:
    msg: Created the production environment.
